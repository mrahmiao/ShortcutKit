//
//  SCKStyleKit.swift
//  ShortcutKit
//
//  Created by mrahmiao on 11/4/15.
//  Copyright (c) 2015 Code4Blues. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import Cocoa

public class SCKStyleKit : NSObject {

    //// Drawing Methods

    public class func drawRecorderControl(recording recording: Bool = true, shortcutExists: Bool = true, recorderText: String = "Record Shortcut") {
        //// General Declarations
        let context = unsafeBitCast(NSGraphicsContext.currentContext()!.graphicsPort, CGContext.self)

        //// Color Declarations
        let borderColor = NSColor(calibratedRed: 0.492, green: 0.492, blue: 0.492, alpha: 1)
        let defaultTextColor = NSColor(calibratedRed: 0, green: 0, blue: 0, alpha: 1)
        let recordingTextColor = NSColor(calibratedHue: defaultTextColor.hueComponent, saturation: defaultTextColor.saturationComponent, brightness: 0.8, alpha: defaultTextColor.alphaComponent)
        let cancelButtonColor = NSColor(calibratedRed: 1, green: 0.522, blue: 0, alpha: 1)

        //// Variable Declarations
        let shortcutTextColor: NSColor = recording ? recordingTextColor : defaultTextColor
        let deleteButtonVisible: Bool = recording && shortcutExists
        let cancelButtonAlternatePosition: NSPoint = NSMakePoint(147, 4)
        let cancelButtonDefaultPosition: NSPoint = NSMakePoint(162, 4)
        let cancelButtonPosition: NSPoint = recording && shortcutExists ? cancelButtonAlternatePosition : cancelButtonDefaultPosition

        //// Recorder Control Drawing
        NSGraphicsContext.saveGraphicsState()
        CGContextTranslateCTM(context, 90, 10.5)

        let recorderControlRect = NSMakeRect(-90, -10.5, 180, 21)
        let recorderControlPath = NSBezierPath(roundedRect: recorderControlRect, xRadius: 4, yRadius: 4)
        NSColor.whiteColor().setFill()
        recorderControlPath.fill()
        borderColor.setStroke()
        recorderControlPath.lineWidth = 2
        recorderControlPath.stroke()
        let recorderControlStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        recorderControlStyle.alignment = .Center

        let recorderControlFontAttributes = [NSFontAttributeName: NSFont.controlContentFontOfSize(12), NSForegroundColorAttributeName: shortcutTextColor, NSParagraphStyleAttributeName: recorderControlStyle]

        let recorderControlTextHeight: CGFloat = NSString(string: recorderText).boundingRectWithSize(NSMakeSize(recorderControlRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: recorderControlFontAttributes).size.height
        let recorderControlTextRect: NSRect = NSMakeRect(recorderControlRect.minX, recorderControlRect.minY + (recorderControlRect.height - recorderControlTextHeight) / 2, recorderControlRect.width, recorderControlTextHeight)
        NSGraphicsContext.saveGraphicsState()
        NSRectClip(recorderControlRect)
        NSString(string: recorderText).drawInRect(NSOffsetRect(recorderControlTextRect, 0, 1), withAttributes: recorderControlFontAttributes)
        NSGraphicsContext.restoreGraphicsState()

        NSGraphicsContext.restoreGraphicsState()


        if (recording) {
            //// Cancel Button Drawing
            NSGraphicsContext.saveGraphicsState()
            CGContextTranslateCTM(context, cancelButtonPosition.x, cancelButtonPosition.y)

            let cancelButtonPath = NSBezierPath()
            cancelButtonPath.moveToPoint(NSMakePoint(10.21, 9.29))
            cancelButtonPath.curveToPoint(NSMakePoint(6.35, 6.9), controlPoint1: NSMakePoint(9.1, 6.99), controlPoint2: NSMakePoint(7.77, 6.9))
            cancelButtonPath.lineToPoint(NSMakePoint(6.35, 8.62))
            cancelButtonPath.lineToPoint(NSMakePoint(2.79, 5.7))
            cancelButtonPath.lineToPoint(NSMakePoint(6.35, 2.79))
            cancelButtonPath.lineToPoint(NSMakePoint(6.35, 4.52))
            cancelButtonPath.curveToPoint(NSMakePoint(10.21, 9.29), controlPoint1: NSMakePoint(10.01, 4.56), controlPoint2: NSMakePoint(10.21, 7.82))
            cancelButtonPath.closePath()
            cancelButtonPath.moveToPoint(NSMakePoint(13, 6.5))
            cancelButtonPath.curveToPoint(NSMakePoint(6.5, 0), controlPoint1: NSMakePoint(13, 2.91), controlPoint2: NSMakePoint(10.09, 0))
            cancelButtonPath.curveToPoint(NSMakePoint(0.13, 5.19), controlPoint1: NSMakePoint(3.36, 0), controlPoint2: NSMakePoint(0.74, 2.23))
            cancelButtonPath.curveToPoint(NSMakePoint(0, 6.5), controlPoint1: NSMakePoint(0.05, 5.61), controlPoint2: NSMakePoint(0, 6.05))
            cancelButtonPath.curveToPoint(NSMakePoint(6.5, 13), controlPoint1: NSMakePoint(0, 10.09), controlPoint2: NSMakePoint(2.91, 13))
            cancelButtonPath.curveToPoint(NSMakePoint(13, 6.5), controlPoint1: NSMakePoint(10.09, 13), controlPoint2: NSMakePoint(13, 10.09))
            cancelButtonPath.closePath()
            cancelButtonColor.setFill()
            cancelButtonPath.fill()

            NSGraphicsContext.restoreGraphicsState()
        }


        if (deleteButtonVisible) {
            //// Delete Button Drawing
            let deleteButtonPath = NSBezierPath()
            deleteButtonPath.moveToPoint(NSMakePoint(170.62, 13.33))
            deleteButtonPath.lineToPoint(NSMakePoint(168.5, 11.21))
            deleteButtonPath.curveToPoint(NSMakePoint(166.38, 13.33), controlPoint1: NSMakePoint(167.39, 12.32), controlPoint2: NSMakePoint(166.38, 13.33))
            deleteButtonPath.curveToPoint(NSMakePoint(165.74, 12.56), controlPoint1: NSMakePoint(166.32, 13.26), controlPoint2: NSMakePoint(165.74, 12.56))
            deleteButtonPath.curveToPoint(NSMakePoint(167.79, 10.5), controlPoint1: NSMakePoint(165.98, 12.31), controlPoint2: NSMakePoint(166.85, 11.44))
            deleteButtonPath.lineToPoint(NSMakePoint(165.67, 8.38))
            deleteButtonPath.lineToPoint(NSMakePoint(166.38, 7.67))
            deleteButtonPath.lineToPoint(NSMakePoint(168.5, 9.79))
            deleteButtonPath.curveToPoint(NSMakePoint(170.62, 7.67), controlPoint1: NSMakePoint(169.61, 8.68), controlPoint2: NSMakePoint(170.62, 7.67))
            deleteButtonPath.lineToPoint(NSMakePoint(171.33, 8.38))
            deleteButtonPath.curveToPoint(NSMakePoint(169.21, 10.5), controlPoint1: NSMakePoint(171.33, 8.38), controlPoint2: NSMakePoint(170.32, 9.39))
            deleteButtonPath.lineToPoint(NSMakePoint(171.33, 12.62))
            deleteButtonPath.lineToPoint(NSMakePoint(170.62, 13.33))
            deleteButtonPath.closePath()
            deleteButtonPath.moveToPoint(NSMakePoint(175, 10.5))
            deleteButtonPath.curveToPoint(NSMakePoint(168.5, 4), controlPoint1: NSMakePoint(175, 6.91), controlPoint2: NSMakePoint(172.09, 4))
            deleteButtonPath.curveToPoint(NSMakePoint(162.11, 9.33), controlPoint1: NSMakePoint(165.31, 4), controlPoint2: NSMakePoint(162.66, 6.3))
            deleteButtonPath.curveToPoint(NSMakePoint(162, 10.5), controlPoint1: NSMakePoint(162.04, 9.71), controlPoint2: NSMakePoint(162, 10.1))
            deleteButtonPath.curveToPoint(NSMakePoint(168.5, 17), controlPoint1: NSMakePoint(162, 14.09), controlPoint2: NSMakePoint(164.91, 17))
            deleteButtonPath.curveToPoint(NSMakePoint(175, 10.5), controlPoint1: NSMakePoint(172.09, 17), controlPoint2: NSMakePoint(175, 14.09))
            deleteButtonPath.closePath()
            NSColor.grayColor().setFill()
            deleteButtonPath.fill()
        }
    }

}
